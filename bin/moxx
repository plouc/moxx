#!/usr/bin/env node

const program   = require('commander')
const columnify = require('columnify')
const package   = require('../package.json')
const moxx      = require('../lib/moxx')
const logger    = require('../lib/logger')


const coerceToInt = value => parseInt(value, 10)

const version = package.version || '@dev'

program
    .version(version)
    .option('-p, --port <port>', 'The port number for the server to listen on', coerceToInt, 5000)
    .option('-d, --dir <directory>', 'The root config/mapping/files directory, default: .', '.')
    .option('-w --watch', 'Watch for changes')
    .option('-r, --record', 'Records proxy requests/responses, disabled by default')
    .option('-x, --proxy <proxy>', 'Act as a proxy')
    .option('--no-color', 'Disable color')
    .option('-l, --loglevel <loglevel>', 'Defines log level, default: info', 'info')
    .parse(process.argv)

const options = {
    dir:      program.dir,
    port:     program.port,
    watch:    !!program.watch,
    record:   !!program.record,
    proxy:    program.proxy,
    loglevel: program.loglevel,
    name:     package.name,
    version,
}

logger.level = options.loglevel

logger.info(`moxx v${options.version}`)
logger.verbose(`config:\n${columnify(options, { showHeaders: false })}`)

moxx.start(options)

process.on('SIGINT', () => {
    moxx.stop()
})

process.on('SIGTERM', () => {
    moxx.stop()
})
